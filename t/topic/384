<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="utf-8">
<title>从零安装GNU/Linux教程（以Pure OS为例） - 技术 - 马列毛群众</title>
<meta name="description" content="从零安装GNU/Linux教程（以Pure OS为例）
前言：
阅读过往期《PAPER》和《新闻》内几篇关于信息安全的文章的读者们都知道，没有自由的操作系统，就没有安全的线上工作环境。撇开自由的操作系统谈自由软件的做法是不彻底的，而自由的操&amp;hellip;">
<meta name="generator" content="Discourse 2.7.0.beta4 - https://github.com/discourse/discourse version 522dae22c4cea5c8c05f53771dcd6fa8085c54c2">
<link rel="icon" type="image/png" href="../../uploads/default/optimized/1X/a33fc15368ea2a75e178ac1d0ba6c73f0ee2998c_2_32x32.png">
<link rel="apple-touch-icon" type="image/png" href="../../uploads/default/optimized/1X/a33fc15368ea2a75e178ac1d0ba6c73f0ee2998c_2_180x180.png">
<meta name="theme-color" content="#ffffff">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover">
<link rel="canonical" href="384" />
<script type="application/ld+json">{"@context":"http://schema.org","@type":"WebSite","url":"https://mlmmlm.icu","potentialAction":{"@type":"SearchAction","target":"https://mlmmlm.icu/search?q={search_term_string}","query-input":"required name=search_term_string"}}</script>
<link rel="search" type="application/opensearchdescription+xml" href="../../opensearch.xml" title="马列毛群众 Search">
<link href="../../stylesheets/desktop_91679fbb32c2a361ad6122ca6474f8ccd3e0b306.css?__ws=mlmmlm.icu" media="all" rel="stylesheet" data-target="desktop" data-theme-id="2" />
<link href="../../stylesheets/desktop_theme_2_3e2557f5e9fa8e0c5cf59e3d928c10fd45659f6e.css?__ws=mlmmlm.icu" media="all" rel="stylesheet" data-target="desktop_theme" data-theme-id="2" />
<link rel="alternate" type="application/rss+xml" title=" &#39;从零安装GNU/Linux教程（以Pure OS为例）&#39;的RSS源" href="384.rss" />
<meta property="og:site_name" content="马列毛群众" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:image" content="https://mlmmlm.icu/uploads/default/original/1X/a33fc15368ea2a75e178ac1d0ba6c73f0ee2998c.png" />
<meta property="og:image" content="https://mlmmlm.icu/uploads/default/original/1X/a33fc15368ea2a75e178ac1d0ba6c73f0ee2998c.png" />
<meta property="og:url" content="https://mlmmlm.icu/t/topic/384" />
<meta name="twitter:url" content="https://mlmmlm.icu/t/topic/384" />
<meta property="og:title" content="从零安装GNU/Linux教程（以Pure OS为例）" />
<meta name="twitter:title" content="从零安装GNU/Linux教程（以Pure OS为例）" />
<meta property="og:description" content="从零安装GNU/Linux教程（以Pure OS为例） 前言： 阅读过往期《PAPER》和《新闻》内几篇关于信息安全的文章的读者们都知道，没有自由的操作系统，就没有安全的线上工作环境。撇开自由的操作系统谈自由软件的做法是不彻底的，而自由的操作系统指的就是GNU/Linux。  由于各种各样的原因（往往是技术层面的阻碍），初学者要想从M$WIN转移到GNU/Linux往往非常困难，这篇文章就是为了解决这个难题，从零开始帮助初学者安装GNU/Linux。  首先是操作系统的选择，自由软件基金会官网上http://www.gnu.org/distros/free-distros.html推荐了许多GNU/Linux，读者可以自由选择，本文章以Pure OS为例。  另，M$WIN是我们对微软Windows的蔑称，全称为Malicious Windows is $  第一章：制作Live 开始这步之前，请准备一个大于4GB的U盘，并备份好里面的数据。  安装GNU/Linux之前，我们要先制作Live，它相当于一个引导介质，在M$WIN上，我们可以使用Rufus来安装。关于Rufus，可以在它..." />
<meta name="twitter:description" content="从零安装GNU/Linux教程（以Pure OS为例） 前言： 阅读过往期《PAPER》和《新闻》内几篇关于信息安全的文章的读者们都知道，没有自由的操作系统，就没有安全的线上工作环境。撇开自由的操作系统谈自由软件的做法是不彻底的，而自由的操作系统指的就是GNU/Linux。  由于各种各样的原因（往往是技术层面的阻碍），初学者要想从M$WIN转移到GNU/Linux往往非常困难，这篇文章就是为了解决这个难题，从零开始帮助初学者安装GNU/Linux。  首先是操作系统的选择，自由软件基金会官网上http://www.gnu.org/distros/free-distros.html推荐了许多GNU/Linux，读者可以自由选择，本文章以Pure OS为例。  另，M$WIN是我们对微软Windows的蔑称，全称为Malicious Windows is $  第一章：制作Live 开始这步之前，请准备一个大于4GB的U盘，并备份好里面的数据。  安装GNU/Linux之前，我们要先制作Live，它相当于一个引导介质，在M$WIN上，我们可以使用Rufus来安装。关于Rufus，可以在它..." />
<meta name="twitter:label1" value="阅读时间" />
<meta name="twitter:data1" value="4 mins 🕑" />
<meta name="twitter:label2" value="赞" />
<meta name="twitter:data2" value="1 ❤" />
<meta property="article:published_time" content="2021-02-09T06:19:20+00:00" />
<meta property="og:ignore_canonical" content="true" />
</head>
<body class="crawler">
<header>
<a href="../../index.html">
<img src="../../uploads/default/original/1X/c7a55769823a013b64a3537f903ab64eff32e4a4.png" alt="马列毛群众" id="site-logo" style="max-width: 150px;">
</a>
</header>
<div id="main-outlet" class="wrap">
<div id="topic-title">
<h1>
<a href="384">从零安装GNU/Linux教程（以Pure OS为例）</a>
</h1>
<div class="topic-category" itemscope itemtype="http://schema.org/BreadcrumbList">
<span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
<a href="../../c/9-category/9" class="badge-wrapper bullet" itemprop="item">
<span class='badge-category-bg' style='background-color: #9EB83B'></span>
<span class='badge-category clear-badge'>
<span class='category-name' itemprop='name'>技术</span>
</span>
</a>
<meta itemprop="position" content="1" />
</span>
</div>
</div>
<div itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>
<div class='crawler-post-meta'>
<div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
<meta itemprop='name' content='马列毛群众'>
<div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
<meta itemprop='url' content='https://mlmmlm.icu/uploads/default/original/1X/c7a55769823a013b64a3537f903ab64eff32e4a4.png'>
</div>
</div>
<span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
<a itemprop="url" href='../../u/anon65721230'><span itemprop='name'>anon65721230</span></a>
</span>
<link itemprop="mainEntityOfPage" href="384">
<span class="crawler-post-infos">
<meta itemprop='datePublished' content='2021-02-09T06:19:20Z'>
<time itemprop='dateModified' datetime='2021-02-09T06:20:54Z' class='post-time'>
2021年02月9日 06:20
</time>
<span itemprop='position'>#1</span>
</span>
</div>
<div class='post' itemprop='articleBody'>
<h1>从零安装GNU/Linux教程（以Pure OS为例）</h1>
<h3>前言：</h3>
<p>阅读过往期《PAPER》和《新闻》内几篇关于信息安全的文章的读者们都知道，没有自由的操作系统，就没有安全的线上工作环境。撇开自由的操作系统谈自由软件的做法是不彻底的，而自由的操作系统指的就是GNU/Linux。</p>
<p>由于各种各样的原因（往往是技术层面的阻碍），初学者要想从M$WIN转移到GNU/Linux往往非常困难，这篇文章就是为了解决这个难题，从零开始帮助初学者安装GNU/Linux。</p>
<p>首先是操作系统的选择，自由软件基金会官网上http://www.gnu.org/distros/free-distros.html推荐了许多GNU/Linux，读者可以自由选择，本文章以Pure OS为例。</p>
<p>另，<strong>M$WIN</strong>是我们对<strong>微软Windows</strong>的蔑称，全称为<strong>Malicious Windows is $</strong></p>
<h3>第一章：制作Live</h3>
<p>开始这步之前，请准备一个大于4GB的U盘，并备份好里面的数据。</p>
<p>安装GNU/Linux之前，我们要先制作Live，它相当于一个引导介质，在M$WIN上，我们可以使用Rufus来安装。关于Rufus，可以在它的官网下载：<a href="https://rufus.ie/">https://rufus.ie/</a></p>
<p>接下来便是Pure OS的ISO的下载，这一步可以选择前往自由软件基金会官网http://www.gnu.org/distros/free-distros.html找到Pure OS下载，或者直接前往 <a href="https://pureos.net/">https://pureos.net/</a> 下载ISO。</p>
<p>这是M$WIN安装Pure OS镜像的教程：<a href="https://ubuntu.com/tutorials/create-a-usb-stick-on-windows#3-usb-selection">https://ubuntu.com/tutorials/create-a-usb-stick-on-windows#3-usb-selection</a> ，虽然是英文，但是已经讲得很详细了，英文不好的读者可以使用谷歌翻译。</p>
<h3>第二章：安装操作系统</h3>
<p>在成功制作了Live后，按照各自设备的设置，按下特定键进入BIOS引导菜单（笔者的设备是F12键），在引导菜单中使用上下键进行操作，选择你的Live设备名（即U盘），点击Enter即可进入Live启动菜单。</p>
<p>进入启动菜单后，什么都不需要做，等待系统自动安装。等待一段时间。刚刚进去的时候可能会很卡，要耐心等待。</p>
<p>接下来要解决卡顿问题，这个问题笔者也没有搞清楚原因，可以是具有特殊性，不卡顿的读者可以跳过这部分。下面说一下笔者解决卡顿问题的办法。</p>
<p>完成后不断点击弹出窗口的右上角继续，窗口消失后移动光标到屏幕右上角，点击设置图标，在新弹出的设置窗口上选择Account/帐户，点击”+“号添加帐户，帐户名随意，必须设置密码，没有密码在注销后无法登录不卡顿的桌面，添加完毕后光标重回右上角，点击小人图标后点击弹出的Log Out登出。</p>
<p>登出后用鼠标点击你新建的用户，或者在Username后面输入用户名，点击Enter。在之后的Password/密码输入密码。</p>
<p>最关键的一步来了，点击确定按钮左边的齿轮图标，弹出列表后鼠标选择X11，列表消失后点击Enter即可进入不卡顿的操作系统。</p>
<p>由于Pure OS的桌面环境基于Debian，我们点击左上角的九宫格图标，在弹出的左侧栏中点击最上方的方块图标，Install Pure OS/安装Pure OS，进入安装流程。</p>
<p>在弹出的安装到哪个硬盘的界面，需要在进入主板引导时观察新增的启动项和原有的启动项，原有启动项的名称要记下来，在备份完原先磁盘上操作系统的数据后（磁盘是新的磁盘就无需备份），选择指定名称的磁盘，接下来点击擦除全部磁盘，如果磁盘原先的操作系统是Debian，只需点击替换原来的扇区，并在下方彩条选择Debian GNU/Linux这一扇区条。</p>
<p>接下来选择用户名和密码，最后进入安装，等待安装进度条走完，重启即可。</p>
<p>重启后移除CD/USB，或者通过引导菜单进入原来名称的磁盘，此时用户会发现分区表已经消失。</p>
<p>如果系统仍然很卡，怎么办？接下来重复在Live里面登出后的操作，登录或重新登录操作系统，便可以消灭卡顿了。</p>
<h3>第三章：配置网络</h3>
<p>没有一个良好的网络，就没有与时俱进的一切。在这节笔者讲解一下科学上网工具的使用。</p>
<p>关于科学上网工具，我们推荐V2ray/QV2ray和Shadowsock/Open VPN等自由软件，在这里笔者选择QV2ray来讲解。（所使用的节点需要自行购买）</p>
<p>QV2ray的Appimage需要首先在文件设置的Permissions中勾选允许作为可执行文件，就可以双击运行，QV2ray在启动后需要解压V2ray的文件到home/V2ray下，在QV2ray的设置里设置V2ray核心路径为home/V2ray，然后点击左下角的组/Groups，点击右侧选择夹的订阅设置，点击复选框，输入订阅链接后点击下方的更新订阅，确定设置，接下来左侧Groups里就有全部的节点列表了，随便双击一个便可以访问境外网站了。</p>
<h3>第四章：Tilix启动热键设定</h3>
<p>Pure OS取消了Ctrl+Alt+T打开终端的设定，并且把Terminal（终端）换成了Tilix。</p>
<p>没关係，这一热键恢复仅需点击设置里面的Keyboard，再点击Shortcut，滚动条拉到最下面，点击加号，输入Name为ilix，Command为tilix，点击热键按钮，点击键盘上的Ctrl+Alt+T以输入热键，然后确定，关闭设置，便可以正常使用这一热键了。</p>
<p>接下来你会发现Files没有Open in Terminal这一选择。继续下面的操作。</p>
<p>接下来打开Tilix，打开Files（以创建下文cd中的命令），输入命令：</p>
<blockquote>
<p>cd ~/.local/share/nautilus/scripts<br>
sudo vi Tilix</p>
</blockquote>
<p>按下键盘上的A键。<br>
输入：</p>
<blockquote>
<p><strong># !/bin/sh</strong><br>
<strong>tilix</strong></p>
</blockquote>
<p>点击键盘上的：键后输入wq，点击回车。<br>
接下来输入命令：</p>
<blockquote>
<p>chmod +x Tilix<br>
nautilus -q<br>
sudo vi ~/.config/nautilus/scripts-accels</p>
</blockquote>
<p>点击键盘上的a键<br>
输入：</p>
<blockquote>
<p>F4 Tilix</p>
</blockquote>
<p>点击键盘上的：键后输入wq，点击回车。</p>
<p>接下来使用File进入任意一个文件夹，点击F4键，会发现Open in Terminal可以使用了。</p>
<h3>第五章：Tilix与Apt代理修复</h3>
<p>Apt是Debian GNU/Linux默认的命令式包管理器，功能非常强大，但是在使用代理的时候会发现它的流量和Tilix的流量都不经过QV2ray，怎么办呢？</p>
<p>如果上述功能不经过代理，国外网络在使用上述功能时会极度缓慢，无法使用。</p>
<p>经过了上述的教程，我想各位都会进行vi的基本操作了。（不熟悉的建议上网查看一下教程）</p>
<p>那么执行如下命令：</p>
<blockquote>
<p>sudo vi ~/.bashrc</p>
</blockquote>
<p>使用Page Down按键翻页到最后，输入：<strong>（端口值按自身情况填入，下方8889填入不一定有效，建议再更换操作系统之前查看原先使用的端口）</strong></p>
<blockquote>
<p>export http_proxy=“127.0.0.1:8889”</p>
</blockquote>
<p>接着保存退出后再输入：</p>
<blockquote>
<p>sudo vi /etc/profile</p>
</blockquote>
<p>使用Page Down按键翻页到最后，输入：</p>
<blockquote>
<p>export http_proxy=“127.0.0.1:8889”</p>
</blockquote>
<p>保存退出后再输入：</p>
<blockquote>
<p>source /etc/profile</p>
</blockquote>
<p>由于QV2ray仅支持终端HTTP代理，并且其HTTP端口默认设置为8889，所以如上所示。<br>
保存后输入命令：</p>
<blockquote>
<p>source ~/.bashrc</p>
</blockquote>
<p>这时会发现使用wget等下载工具的流量是经过代理的了。</p>
<p>接下来我们来解决Apt代理，只需执行命令：</p>
<blockquote>
<p>sudo vi /etc/apt/apt.conf</p>
</blockquote>
<p>后输入：</p>
<blockquote>
<p>Acquire::http::Proxy “<a href="http://127.0.0.1:8889">http://127.0.0.1:8889</a>”</p>
</blockquote>
<p>保存即可。</p>
<h3>第六章：软件安装</h3>
<p>笔者推荐一些安装软件的指令：</p>
<p><span class="hashtag">#号后是注释</span>，可加可不加，笔者只想表达我们日常生活中的许多私有软件其实都是可以被对应的自由软件替代的，比如Libreoffice可以替代Office和WPS，gimp可以替代Photoshop。</p>
<blockquote>
<p>sudo apt update -y<br>
sudo apt upgrade -y<br>
<span class="hashtag">#run</span> chinese input<br>
sudo apt -y install tree<br>
sudo apt -y install ibus-pinyin ibus-rime<br>
sudo apt -y install vim<br>
sudo apt -y remove leafpad <span class="hashtag">#Text</span><br>
sudo apt -y install vlc <span class="hashtag">#Video</span><br>
sudo apt -y install audacity <span class="hashtag">#Audio</span> record<br>
sudo apt -y install brasero <span class="hashtag">#CD-DVD</span><br>
sudo apt -y install pidgin <span class="hashtag">#Pidgin</span><br>
sudo apt -y install pidgin-otr<br>
sudo apt -y install ettercap-graphical <span class="hashtag">#attack</span><br>
sudo apt -y install tor <span class="hashtag">#Dark</span> web<br>
sudo apt -y install torbrowser-launcher<br>
sudo apt -y install wireshark <span class="hashtag">#sniffer</span><br>
sudo apt -y install gimp <span class="hashtag">#Photoshop</span><br>
sudo apt -y install libreoffice <span class="hashtag">#Office</span><br>
sudo apt -y install axel <span class="hashtag">#More</span> process downloading, Seriously, It could be use for PyTube!<br>
sudo apt -y install lmms <span class="hashtag">#audio</span> make<br>
sudo apt -y install vim-gtk #"+y<br>
sudo apt-get install w3m w3m-img <span class="hashtag">#Terminal</span> Browser<br>
sudo cp -vf vimrc /etc/vim/vimrc</p>
<p>sudo apt install build-essential libreadline-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libffi-dev zlib1g-dev libncursesw5-dev libc6-dev libsqlite3-dev openssl sqlite3 bzip2 libbz2-dev libgdbm-compat-dev liblzma-dev uuid-dev -y<br>
sudo apt install zlib* p7zip-full libx11-dev -y</p>
</blockquote>
<p>文件vimrc的内容爲：</p>
<blockquote>
<p>" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by<br>
" the call to :runtime you can find below. If you wish to change any of those<br>
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim<br>
" will be overwritten everytime an upgrade of the vim packages is performed.<br>
" It is recommended to make changes after sourcing debian.vim since it alters<br>
" the value of the ‘compatible’ option.</p>
<p>" This line should not be removed as it ensures that various options are<br>
" properly set to work with the Vim-related packages available in G$bian.<br>
runtime! debian.vim</p>
<p>" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.<br>
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override<br>
" any settings in these files.<br>
" If you don’t want that to happen, uncomment the below line to prevent<br>
" defaults.vim from being loaded.<br>
" let g:skip_defaults_vim = 1</p>
<p>" Uncomment the next line to make Vim more Vi-compatible<br>
" NOTE: debian.vim sets ‘nocompatible’. Setting ‘compatible’ changes numerous<br>
" options, so any other options should be set AFTER setting ‘compatible’.<br>
"set compatible</p>
<p>" Vim5 and later versions support syntax highlighting. Uncommenting the next<br>
" line enables syntax highlighting by default.<br>
if has(“syntax”)<br>
syntax on<br>
endif</p>
<p>" If using a dark background within the editing area and syntax highlighting<br>
" turn on this option as well<br>
"set background=dark</p>
<p>" Uncomment the following to have Vim jump to the last position when<br>
" reopening a file<br>
“if has(“autocmd”)<br>
" au BufReadPost * if line(”’"") &gt; 1 &amp;&amp; line("’"") &lt;= line("$") | exe “normal! g’”" | endif<br>
"endif</p>
<p>" Uncomment the following to have Vim load indentation rules and plugins<br>
" according to the detected filetype.<br>
"if has(“autocmd”)<br>
" filetype plugin indent on<br>
"endif</p>
<p>" The following are commented out as they cause vim to behave a lot<br>
" differently from regular Vi. They are highly recommended though.<br>
"set showcmd " Show (partial) command in status line.<br>
"set showmatch " Show matching brackets.<br>
"set ignorecase " Do case insensitive matching<br>
"set smartcase " Do smart case matching<br>
"set incsearch " Incremental search<br>
"set autowrite " Automatically save before commands like :next and :make<br>
"set hidden " Hide buffers when they are abandoned<br>
"set mouse=a " Enable mouse usage (all modes)</p>
<p>" Source a global configuration file if available<br>
if filereadable("/etc/vim/vimrc.local")<br>
source /etc/vim/vimrc.local<br>
endif<br>
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1<br>
set termencoding=utf-8<br>
set encoding=utf-8</p>
</blockquote>
<p><strong>下面介绍安装Python的方法，不想安装的同志可以跳过，但是建议还是安装，很多软件的运行都需要Python解释器。（下面介绍的是Python 3.9.1的安装）</strong></p>
<p>接下来我们来手动编译Tcl-Tk-Python 3.9.1。<br>
首先前往https://www.tcl.tk/､<a href="https://python.org/%EF%BD%A4https://github.com/pypa/setuptools/releases%EF%BD%A4https://github.com/pypa/pip/releases">https://python.org/､https://github.com/pypa/setuptools/releases､https://github.com/pypa/pip/releases</a> 下载我们的四大件。</p>
<p>Tcl､Tk的安装只需要解压后进入相应的Unix目录下，F4后输入命令：</p>
<blockquote>
<p>./configure<br>
make<br>
sudo make install</p>
</blockquote>
<p>即可。</p>
<p>Python安装需要修改Modules下的Setup或Setup.dist，将其中几行修改如下以启用Tcl､Tk：</p>
<blockquote>
<p><strong>#</strong> *** Always uncomment this (leave the leading underscore in!):<br>
_tkinter _tkinter.c tkappinit.c -DWITH_APPINIT \</p>
<p><strong>#</strong> *** Uncomment and edit to reflect where your Tcl/Tk libraries are:<br>
-L/usr/local/lib \</p>
<p><strong>#</strong> *** Uncomment and edit to reflect where your Tcl/Tk headers are:</p>
<p><strong>#</strong> -I/usr/local/include <br>
<strong>#</strong> *** Uncomment and edit to reflect where your X11 header files are:<br>
-I/usr/X11R6/include \</p>
<p><strong>#</strong> *** Or uncomment this for Solaris:</p>
<p><strong>#</strong> -I/usr/openwin/include <br>
<strong>#</strong> *** Uncomment and edit for Tix extension only:</p>
<p><strong>#</strong> -DWITH_TIX -ltix8.1.8.2 <br>
<strong>#</strong> *** Uncomment and edit for BLT extension only:</p>
<p><strong>#</strong> -DWITH_BLT -I/usr/local/blt/blt8.0-unoff/include -lBLT8.0 <br>
<strong>#</strong> *** Uncomment and edit for PIL (TkImaging) extension only:</p>
<p><strong>#</strong> (See <a href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a> for more info)<br>
<strong>#</strong> -DWITH_PIL -I…/Extensions/Imaging/libImaging tkImaging.c <br>
<strong>#</strong> *** Uncomment and edit for TOGL extension only:</p>
<p><strong>#</strong> -DWITH_TOGL togl.c <br>
<strong>#</strong> *** Uncomment and edit to reflect your Tcl/Tk versions:<br>
-ltk8.6 -ltcl8.6 \</p>
<p><strong>#</strong> *** Uncomment and edit to reflect where your X11 libraries are:</p>
<p><strong>#</strong> -L/usr/X11R6/lib <br>
<strong>#</strong> *** Or uncomment this for Solaris:</p>
<p><strong>#</strong> -L/usr/openwin/lib <br>
<strong>#</strong> *** Uncomment these for TOGL extension only:</p>
<p><strong>#</strong> -lGL -lGLU -lXext -lXmu <br>
<strong>#</strong> *** Uncomment for AIX:</p>
<p><strong>#</strong> -lld <br>
<strong>#</strong> *** Always uncomment this; X11 libraries to link with:<br>
-lX11</p>
</blockquote>
<p>接下来回到Python文件夹内，输入命令：</p>
<blockquote>
<p>./configure --prefix=/usr/local/pyth --enable-optimizations --without-ensurepip<br>
make<br>
sudo make install<br>
sudo ln -s /usr/local/pyth/bin/python3.9 /usr/bin/pyth</p>
</blockquote>
<p>最后输入pyth，就可以初步使用Python 3.9.1了。</p>
<p>接下来解压Setuptools和Pip。<br>
分别进入其目录内输入命令：</p>
<blockquote>
<p>sudo pyth setup.py install</p>
</blockquote>
<p>即可安装。</p>
<p>最后输入：</p>
<blockquote>
<p>sudo mkdir /home/$USERNAME/.cache/pip/<br>
sudo mkdir /home/$USERNAME/.cache/pip/http/<br>
sudo chown -R root /home/$USERNAME/.cache/pip/<br>
sudo chown -R root /home/$USERNAME/.cache/pip/http/</p>
</blockquote>
<p>以去除Pip的报错，此时一个完整的Python 3.9.1就安装好了。</p>
<h3>第七章：改善体验</h3>
<p>为了改善使用者的体验，笔者在此推荐输入命令：</p>
<blockquote>
<p>sudo apt install lxde</p>
</blockquote>
<p>然后登出该账户，在齿轮里选择LXDE这一桌面环境，点击确定。<br>
接下来是修复LXDE，这一最快的GNU/Linux桌面环境的快捷键。<br>
其桌面环境已经帮我们修好了F4这一按键，以及部分地修复了vim的右键菜单，接下来要修复的是Ctrl+Alt+T。</p>
<p>输入命令：<br>
vim是vi的升级版，其上下左右使用退格键更好。</p>
<blockquote>
<p>sudo vim ~/.config/openbox/lxde-rc.xml</p>
</blockquote>
<p>然后在其中有很多“keybind key”的最末尾，的最内层嵌套框架内输入：</p>
<pre><code class="lang-auto">    &lt;!-- Launch LXTerminal with Ctrl+Alt+t--&gt;
    &lt;keybind key="C-A-t"&gt;
      &lt;action name="Execute"&gt;
        &lt;command&gt;lxterminal&lt;/command&gt;
      &lt;/action&gt;
    &lt;/keybind&gt;
</code></pre>
<p>保存退出即可，如果不行请重启。</p>
<h3>第八章：配置语言</h3>
<p>在经过重启之后，登出再登录，点击齿轮更换桌面系统，配置X11的语言：</p>
<p>设置、区域和语言、点击加号，选择Other、Chinese (Rime)，再点击加号，选择Other、Chinese (Pinyin)。</p>
<p>接下来配置第一个桌面系统的语言：<br>
左下角的菜单栏、区域和语言（输入法配置）、选择IBus Preferences、点击Input Method、点击加号，选择Other、Chinese (Rime)，再点击加号，选择Other、Chinese (Pinyin)</p>
<p><strong>到此为止，整个Pure OS算是安装完成了，各位同志可以开展自己的革命工作了。</strong></p>
<h3>第九章：为什么不介绍其他GNU/Linux的操作系统？</h3>
<p>为什么不推荐Debian？Trisquel？gNewSence？</p>
<p>因为Grand Unified Bootloader这个软件在笔者的主板上无法运行，笔者暂时不知道原因。（可能是因为其兼容性不是很好）</p>
<p>为什么不是Trisquel Mini？</p>
<p>其似乎没有Grand Unified Bootloader的问题，但是其网络代理存在待以解决的问题。</p>
<p>为什么不是Dragora/Guix？</p>
<p>它们无法使用Trisquel/Ubuntu的Startup Disk Creator制作Live。</p>
<p>为什么不是Ututo S？</p>
<p>它在笔者的计算机上无法安装，并且其弄坏了我的一个高速的128G USB，使其FDD化，无法再安装其他Live了，甚至使用专业的数据恢复软件都无法恢复。</p>
<h3>第十章：对Ubuntu的批判</h3>
<p>Ubuntu(etc.)维护着私有软件的特定存储库，Canonical在其某些发行渠道中明确宣传并推荐以Ubuntu(etc.)为名的私有软件。Ubuntu(etc.)提供了仅安装自由软件包的选项，这意味着它也提供了安装私有软件包的选项。此外，Ubuntu(etc.)中包含的Linux版本（内核）包含固件Blob。</p>
<p>“Ubuntu(etc.)软件中心”列出了混杂在一起的私有程序和自由程序。很难分辨哪些是自由的，因为自由下载的私有程序被标记为“自由”。</p>
<p>Ubuntu(etc.)似乎允许将带有商标的精确副本商业化分发；仅对于修改版本，才需要删除商标。这是商标可接受的政策。同一页的下一页对“Ubuntu(etc.)专利”作了含糊和不祥的陈述，但没有提供足够的细节来表明这是否构成侵略。</p>
<p>该页面使用误导性术语“知识产权”来分散混乱，该术语错误地假定商标法和专利法以及其他几项法律属于一个概念框架。毫无例外地使用该术语是有害的，因此在引用他人对该术语的使用后，我们应该始终拒绝该术语。但是，这并不是将Ubuntu(etc.)作为GNU / Linux发行版的实质性问题。</p>
<p>自由软件基金会创始人理查德‧斯托曼反击实用主义的Ubuntu系统：<strong>Ubuntu : The Spyware，自从Ubuntu更新中加入了亚马逊，这使得社区强烈不满。自由软件理应由自由和安全著称，但Ubuntu唱了反调。就像里面说的“实用性第一”，这是完全错误的。可能某些自由软件确实没有那么实用，但私有软件在道德上就落了自由软件一条街。</strong></p>
<p>下面是出处视频：</p>
<p><strong><a href="https://www.youtube.com/watch?v=CP8CNp-vksc">https://www.youtube.com/watch?v=CP8CNp-vksc</a></strong><br>
<strong><a href="https://www.bilibili.com/video/av95382892/">https://www.bilibili.com/video/av95382892/</a></strong></p>
<h3>尾声</h3>
<p>笔者由衷地希望各位在安装GNU/Linux上困惑已久的同志通过这篇文章，可以迅速用上GNU/Linux，为马列毛主义革命事业的推进添砖加瓦。</p>
<p>感谢各位的观看。</p>
<p><strong>本文采用CC0协议投放至公有领域。</strong></p>
</div>
<meta itemprop='headline' content='从零安装GNU/Linux教程（以Pure OS为例）'>
<meta itemprop='keywords' content=''>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/LikeAction" />
<meta itemprop="userInteractionCount" content="1" />
<span class='post-likes'>1赞</span>
</div>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/CommentAction" />
<meta itemprop="userInteractionCount" content="0" />
</div>
</div>
<div itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>
<div class='crawler-post-meta'>
<div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
<meta itemprop='name' content='马列毛群众'>
<div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
<meta itemprop='url' content='https://mlmmlm.icu/uploads/default/original/1X/c7a55769823a013b64a3537f903ab64eff32e4a4.png'>
</div>
</div>
<span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
<a itemprop="url" href='../../u/anon65721230'><span itemprop='name'>anon65721230</span></a>
</span>
<link itemprop="mainEntityOfPage" href="384">
<span class="crawler-post-infos">
<time itemprop='datePublished' datetime='2021-02-09T06:22:44Z' class='post-time'>
2021年02月9日 06:22
</time>
<meta itemprop='dateModified' content='2021-02-09T06:22:44Z'>
<span itemprop='position'>#2</span>
</span>
</div>
<div class='post' itemprop='articleBody'>
<p>这篇文章为@waosp、@waospm所写，本人受其委托帮忙修改了一些内容，希望能帮到在这方面有困难的同志，文章有问题欢迎指出。</p>
</div>
<meta itemprop='headline' content='从零安装GNU/Linux教程（以Pure OS为例）'>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/LikeAction" />
<meta itemprop="userInteractionCount" content="0" />
<span class='post-likes'></span>
</div>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/CommentAction" />
<meta itemprop="userInteractionCount" content="0" />
</div>
</div>
<div itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>
<div class='crawler-post-meta'>
<div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
<meta itemprop='name' content='马列毛群众'>
<div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
<meta itemprop='url' content='https://mlmmlm.icu/uploads/default/original/1X/c7a55769823a013b64a3537f903ab64eff32e4a4.png'>
</div>
</div>
<span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
<a itemprop="url" href='../../u/msc'><span itemprop='name'>msc</span></a>
</span>
<link itemprop="mainEntityOfPage" href="384">
<span class="crawler-post-infos">
<time itemprop='datePublished' datetime='2021-02-09T07:39:15Z' class='post-time'>
2021年02月9日 07:39
</time>
<meta itemprop='dateModified' content='2021-02-09T07:39:15Z'>
<span itemprop='position'>#3</span>
</span>
</div>
<div class='post' itemprop='articleBody'>
<p>我退而求其次，用kali，其中不自由之处就是包含厂商的私有驱动。</p>
</div>
<meta itemprop='headline' content='从零安装GNU/Linux教程（以Pure OS为例）'>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/LikeAction" />
<meta itemprop="userInteractionCount" content="0" />
<span class='post-likes'></span>
</div>
<div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
<meta itemprop="interactionType" content="http://schema.org/CommentAction" />
<meta itemprop="userInteractionCount" content="0" />
</div>
</div>
</div>
<footer class="container wrap">
<nav class='crawler-nav'>
<ul>
<li itemscope itemtype='http://schema.org/SiteNavigationElement'>
<span itemprop='name'>
<a href='../../index.html' itemprop="url">首页 </a>
</span>
</li>
<li itemscope itemtype='http://schema.org/SiteNavigationElement'>
<span itemprop='name'>
<a href='../../categories' itemprop="url">分类 </a>
</span>
</li>
<li itemscope itemtype='http://schema.org/SiteNavigationElement'>
<span itemprop='name'>
<a href='../../guidelines' itemprop="url">FAQ/指引 </a>
</span>
</li>
<li itemscope itemtype='http://schema.org/SiteNavigationElement'>
<span itemprop='name'>
<a href='../../tos' itemprop="url">服务条款 </a>
</span>
</li>
<li itemscope itemtype='http://schema.org/SiteNavigationElement'>
<span itemprop='name'>
<a href='../../privacy' itemprop="url">隐私政策 </a>
</span>
</li>
</ul>
</nav>
<p class='powered-by-link'>由 <a href="https://www.discourse.org">Discourse</a>提供支持，启用 JavaScript 以获得最佳体验</p>
</footer>
</body>
</html>
